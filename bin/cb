#!/bin/bash
set -e

info() {
  echo "[`date +'%Y-%m-%d %T'`] $@"
}

infon() {
  echo -n "[`date +'%Y-%m-%d %T'`] $@"
}

die() {
  echo "[`date +'%Y-%m-%d %T'`] $@" >&2
  exit 1
}

while [[ $# -gt 1 ]]; do
  key="$1"

  case $key in
    -p|--project)
      PROJECT="$2"
      shift # past argument
      ;;
    -b|--branch)
      BRANCH="$2"
      shift # past argument
      ;;
    -r|--region)
      REGION="$2"
      shift # past argument
      ;;
    -e|--ecr-repo)
      ECR_REPO="$2"
      shift # past argument
      ;;
    *)
      echo "Unknown Option."
      exit 1
      ;;
  esac
  shift # past argument or value
done

eval project_name=\$PROJECT
if [ "$project_name" ]; then
  info "Project Name: $project_name"
else
  die "-p|--project Required"
fi

eval branch_name=\$BRANCH
if [ "$branch_name" ]; then
  info "Branch Name: $branch_name"
else
  die "-b|--branch Required"
fi

eval ecr_repo=\$ECR_REPO
if [ "$ecr_repo" ]; then
  info "ECR Repo: $ecr_repo"
else
  die "-e|--ecr-repo Required"
fi

aws_region='us-west-2'
eval region_set=\$REGION
if [ "$region_set" ]; then
  aws_region="$region_set"
fi
info "ECR Region: $region"

clean_branch="$(echo $branch_name | sed -e 's/\//-/g')"
short_sha="$(git rev-parse --short HEAD)"

init_build() {
  aws --region $aws_region codebuild start-build --project-name $project_name --source-version $branch_name
}

start_build() {
  init_build | jq -r '.build.id'
}

batch_build_data() {
  aws --region $aws_region codebuild batch-get-builds --ids "${build_id}"
}

build_complete() {
  # true|false
  batch_build_data | jq -r '.builds[0].buildComplete'
}

build_status() {
  # IN_PROGRESS|FAILED|SUCCEEDED
  batch_build_data | jq -r '.builds[0].buildStatus'
}

build_phase() {
  # BUILD|??
  batch_build_data | jq -r '.builds[0].buildPhase'
}

is_updating() {
  [[ "$(build_complete)" == "false" ]] && return 0
  return 1
}

is_complete() {
  [[ "$(build_complete)" == "true" ]] && return 0
  return 1
}

while [[ true ]] ; do
  info "Building branch: $branch_name"
  build_id="$(start_build)"
  info "Build ID: $build_id"
  info "Branch Build Image Tag: $ecr_repo:$clean_branch"
  info "Specific Build Image Tag: $ecr_repo:${clean_branch}-${short_sha}"

  start=$(date -u +%s)
  deadline=$((start + 900))
  while is_updating && [[ $(date -u +%s) -le $deadline ]] ; do
    echo -n .
    sleep 15
  done
  echo " "

  info "Build Status: $(build_status)"
  info "Build Phase: $(build_phase)"
  info "Build Compelte: $(build_complete)"

  if is_updating ; then
    die "Build timed out!"
  fi

  if [[ "$(build_status)" != "SUCCEEDED" ]]; then
    die "Build failed!"
  fi

  info "Branch Build Image Tag: $ecr_repo:$clean_branch"
  info "Specific Build Image Tag: $ecr_repo:${clean_branch}-${short_sha}"
  info "Update complete!"
  exit 0
done
